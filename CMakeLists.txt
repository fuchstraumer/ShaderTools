INCLUDE(ExternalProject)
CMAKE_MINIMUM_REQUIRED(VERSION 3.3)
PROJECT(ShaderTools)

SET(CMAKE_CXX_STANDARD 17)
SET(CMAKE_CXX_STANDARD_REQUIRED ON)

OPTION(BUILD_LIBRARY "Build this as a static library" ON)

ADD_DEFINITIONS("-D_SILENCE_ALL_CXX17_DEPRECATION_WARNINGS")
SET(SHADERC_SKIP_TESTS ON)
SET(SPIRV_SKIP_EXECUTABLES ON)
SET(ENABLE_AMD_EXTENSIONS OFF)
SET(ENABLE_NV_EXTENSIONS OFF)
SET(ENABLE_GLSLANG_BINARIES OFF)
SET(SHADERC_THIRD_PARTY_ROOT_DIR "${CMAKE_CURRENT_SOURCE_DIR}/third_party")
SET(SHADERC_SPIRV_HEADERS_DIR "${CMAKE_CURRENT_SOURCE_DIR}/third_party/spirv-headers")
SET(SHADERC_GLSLANG_DIR "${CMAKE_CURRENT_SOURCE_DIR}/third_party/glslang")
SET(SHADERC_SPIRV_TOOLS_DIR "${CMAKE_CURRENT_SOURCE_DIR}/third_party/spirv-tools")
ADD_SUBDIRECTORY("${CMAKE_CURRENT_SOURCE_DIR}/third_party/shaderc" EXCLUDE_FROM_ALL)
ADD_SUBDIRECTORY("${CMAKE_CURRENT_SOURCE_DIR}/third_party/spirv-cross" EXCLUDE_FROM_ALL)

FILE(GLOB SOURCES "${CMAKE_CURRENT_SOURCE_DIR}/src/*.cpp")
FILE(GLOB HEADERS "${CMAKE_CURRENT_SOURCE_DIR}/include/*.hpp")
FIND_PACKAGE(Vulkan REQUIRED)
IF(BUILD_LIBRARY) 
ADD_LIBRARY(ShaderTools STATIC ${SOURCES} ${HEADERS}) 
ELSE()
ADD_EXECUTABLE(ShaderTools ${SOURCES} ${HEADERS})
ENDIF()
TARGET_LINK_LIBRARIES(ShaderTools shaderc spirv-cross-core spirv-cross-glsl spirv-cross-cpp)
TARGET_INCLUDE_DIRECTORIES(ShaderTools PUBLIC "${CMAKE_CURRENT_SOURCE_DIR}/third_party" "${CMAKE_CURRENT_SOURCE_DIR}/include" "${Vulkan_INCLUDE_DIRS}")