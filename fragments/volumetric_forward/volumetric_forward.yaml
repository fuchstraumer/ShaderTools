---

resource_groups : 
    GlobalResources : 
        matrices : 
            Type : "UniformBuffer"
            Members : |+1
                mat4 model;
                mat4 view;
                mat4 inverseView;
                mat4 projection;
                mat4 modelView;
                mat4 modelViewProjection;
                mat4 inverseTransposeModel;
                mat4 inverseTransposeModelView;     
        globals : 
            Type : "UniformBuffer"
            Members : |+1
                vec4 viewPosition;
                vec2 mousePosition;
                vec2 windowSize;
                vec2 depthRange;
                uint frame;
                float exposure;
                float gamma;
                float brightness;
    Material : 
        MaterialParameters : 
            Type : "UniformBuffer"   
            Members : |+1
                Material Data;   
        AlbedoMap : 
            Type : "SampledImage"        
        NormalMap : 
            Type : "SampledImage"         
        AmbientOcclusionMap : 
            Type : "SampledImage"      
        MetallicMap : 
            Type : "SampledImage" 
        RoughnessMap :
            Type : "SampledImage"
        LinearRepeatSampler : 
            Type : "Sampler"
        LinearClampSampler : 
            Type : "Sampler"
        AnisotropicSampler : 
            Type : "Sampler"
    VolumetricForward : 
        ClusterData : 
            Type : "UniformBuffer"
            Members : |+1
                uvec3 GridDim;
                float ViewNear;
                uvec2 ScreenSize;
                float NearK;
                float LogGridDimY;
        ClusterAABBs : 
            Type : "StorageBuffer"
            Qualifiers : "restrict"
            Members : |+1
                AABB Data[];
            PerUsageQualifiers : 
                AssignLightsToClustersBVH : "readonly"   
        ClusterFlags : 
            Type : "StorageTexelBuffer"
            Format : "r8ui"
            Qualifiers : "restrict"
            PerUsageQualifiers : 
                FindUniqueClusters : "readonly"
                ClusterSamples : "writeonly" 
        PointLightIndexList : 
            Type : "StorageTexelBuffer"
            Format : "r32ui"
            Qualifiers : "restrict"
            PerUsageQualifiers : 
                AssignLightsToClustersBVH : "writeonly"
                Clustered : "readonly"
        SpotLightIndexList : 
            Type : "StorageTexelBuffer"
            Format : "r32ui"
            Qualifiers : "restrict"
            PerUsageQualifiers : 
                AssignLightsToClustersBVH : "writeonly"
                Clustered : "readonly"
        PointLightGrid : 
            Type : "StorageTexelBuffer"
            Format : "rg32ui"
            Qualifiers : "restrict"
            PerUsageQualifiers : 
                AssignLightsToClustersBVH : "writeonly"
                Clustered : "readonly"
        SpotLightGrid : 
            Type : "StorageTexelBuffer"
            Format : "rg32ui"
            Qualifiers : "restrict"
            PerUsageQualifiers : 
                AssignLightsToClustersBVH : "writeonly"
                Clustered : "readonly"
        PointLightIndexCounter : 
            Type : "StorageTexelBuffer"
            Format : "r32ui"
            Qualifiers : "restrict"
        SpotLightIndexCounter : 
            Type : "StorageTexelBuffer"
            Format : "r32ui"
            Qualifiers : "restrict"
        UniqueClustersCounter : 
            Type : "StorageTexelBuffer"
            Format : "r32ui"
            Qualifiers : "restrict"
            PerUsageQualifiers : 
                UpdateClusterIndirectArgs : "readonly"
        UniqueClusters : 
            Type : "StorageTexelBuffer"
            Format : "r32ui"
            Qualifiers : "restrict"
            PerUsageQualifiers : 
                AssignLightsToClustersBVH : "readonly"
                FindUniqueClusters : "writeonly"
    VolumetricForwardLights : 
        LightCounts : 
            Type : "UniformBuffer"
            Members : |+1
                uint NumPointLights;
                uint NumSpotLights;
                uint NumDirectionalLights;
        PointLights : 
            Type : "StorageBuffer"
            Members : |+1
                PointLight Data[];
            # PerUsageQualifiers: qualifiers to apply only to single shaders in the pack
            # Other qualifiers are applied pack-wide
            Qualifiers : "restrict"
            PerUsageQualifiers : 
                Clustered : "readonly"
                ReduceLightsAABB : "readonly"
                ComputeMortonCodes : "readonly"
                AssignLightsToClustersBVH : "readonly"
        SpotLights : 
            Type : "StorageBuffer"
            Members : |+1
                SpotLight Data[];
            Qualifiers : "restrict"
            PerUsageQualifiers : 
                Clustered : "readonly"
                ReduceLightsAABB : "readonly"
                ComputeMortonCodes : "readonly"
                AssignLightsToClustersBVH : "readonly"
        DirectionalLights : 
            Type : "StorageBuffer"
            Members : |+1
                DirectionalLight Data[];
            Qualifiers : "restrict"
            PerUsageQualifiers : 
                Clustered : "readonly"
                ReduceLightsAABB : "readonly"
                ComputeMortonCodes : "readonly"
    IndirectArgsSet : 
        IndirectArgs : 
            Type : "StorageBuffer"
            Members : |+1
                uint NumThreadGroupsX;
                uint NumThreadGroupsY;
                uint NumThreadGroupsZ;
                uint Padding;
            Qualifiers : "restrict"
    SortResources : 
        DispatchParams : 
            Type : "UniformBuffer"
            Members : |+1
                uvec3 NumThreadGroups;
                uint Padding0;
                uvec3 NumThreads;
                uint Padding1;
        ReductionParams : 
            Type : "UniformBuffer"
            Members : |+1
                uint NumElements;
                uvec3 Padding;
        SortParams : 
            Type : "UniformBuffer" 
            Members : |+1
                uint NumElements;
                uint ChunkSize;
        LightAABBs : 
            Type : "StorageBuffer"
            Members : |+1
                AABB Data[];
            Qualifiers : "restrict"
            PerUsageQualifiers : 
                ComputeMortonCodes : "readonly"   
        PointLightMortonCodes : 
            Type : "StorageTexelBuffer"
            Format : "r32ui"
            Qualifiers : "restrict"    
        SpotLightMortonCodes : 
            Type : "StorageTexelBuffer"
            Format : "r32ui"
            Qualifiers : "restrict"    
        PointLightIndices : 
            Type : "StorageTexelBuffer"
            Format : "r32ui"
            Qualifiers : "restrict"   
        SpotLightIndices : 
            Type : "StorageTexelBuffer"
            Format : "r32ui"
            Qualifiers : "restrict"
    MergeSortResources : 
        InputKeys : 
            Type : "StorageTexelBuffer"
            Format : "r32ui"
            Qualifiers : "restrict readonly"
        InputValues : 
            Type : "StorageTexelBuffer"
            Format : "r32ui"
            Qualifiers : "restrict readonly"
        OutputKeys : 
            Type : "StorageTexelBuffer"
            Format : "r32ui"
            Qualifiers : "restrict writeonly"
        OutputValues : 
            Type : "StorageTexelBuffer"
            Format : "r32ui"
            Qualifiers : "restrict writeonly"
        MergePathPartitions : 
            Type : "StorageTexelBuffer"
            Format : "r32i"
            Qualifiers : "restrict"
    BVHResources : 
        BVHParams : 
            Type : "UniformBuffer"
            Members : |+1
                uint PointLightLevels;
                uint SpotLightLevels;
                uint ChildLevel;
        PointLightBVH : 
            Type : "StorageBuffer"
            Members : |+1
                AABB Data[];
            Qualifiers : "restrict"
            PerUsageQualifiers : 
                AssignLightsToClustersBVH : "readonly" 
        SpotLightBVH : 
            Type : "StorageBuffer"
            Members : |+1
                AABB Data[];
            Qualifiers : "restrict"
            PerUsageQualifiers : 
                AssignLightsToClustersBVH : "readonly"
    Debug : 
        ClusterColors : 
            Type : "StorageTexelBuffer"
            Format : "rgba8"
            Qualifiers : "restrict readonly"
        DebugClustersIndirectArgs :
            Type : "StorageBuffer"
            Members : |+1
                uint vertexCount;
                uint instanceCount;
                uint firstVertex;
                uint firstInstance;
        DebugClustersMatrices :
            Type : "UniformBuffer"
            Members : |+1
                mat4 dbView;
                mat4 dbProjection;

shader_groups : 
    UpdateLights : 
        Shaders : 
            Compute : "compute/UpdateLights.comp"
    ReduceLights : 
        Shaders : 
            Compute : "compute/ReduceLightsAABB.comp"
        Extensions : [
            "GL_EXT_control_flow_attributes"
        ]
    ComputeMortonCodes : 
        Shaders : 
            Compute : "compute/ComputeMortonCodes.comp"
    RadixSort : 
        Shaders : 
            Compute : "compute/RadixSort.comp"
        Extensions : [
            "GL_EXT_control_flow_attributes"
        ]
    MergeSort : 
        Shaders : 
            Compute : "compute/MergeSort.comp"
    BuildBVH : 
        Shaders : 
            Compute : "compute/BuildBVH.comp"
    DepthPrePass : 
        Shaders : 
            Vertex : "Default.vert"
            Fragment : "PrePass.frag"
        # Use DepthOnly tag to force front-end to attach a depth stencil output
        # These shaders probably don't write to the backbuffer for color but
        # we want to keep depth info.
        Tags : [ "DepthOnly" ]
    ClusterSamples : 
        Shaders : 
            Vertex : "Default.vert"
            Fragment : "ClusterSamples.frag"
        Tags : [ "DepthOnlyAsInput" ]
    FindUniqueClusters : 
        Shaders : 
            Compute : "compute/FindUniqueClusters.comp"
    UpdateClusterIndirectArgs : 
        Shaders : 
            Compute : "compute/UpdateClusterIndirectArgs.comp"
    AssignLightsToClusters : 
        Shaders : 
            Compute : "compute/AssignLightsToClustersBVH.comp"
        Extensions : [
            "GL_EXT_control_flow_attributes"
        ]
        OptimizationDisabled : true
    DrawPass : 
        Shaders : 
            Vertex : "Default.vert"
            Fragment : "Clustered.frag"
        # Draw pass reads depth but has no ability to write to it
        Tags : [ "DepthOnlyAsInput" ]
    # Run before everything else but only once per window resizing
    # So I'm putting it down here
    ComputeClusterAABBs : 
        Shaders : 
            Compute : "compute/ComputeClusterAABBs.comp"
    DebugClusters : 
        Shaders : 
            Vertex : "debug/DebugClusters.vert"
            Geometry : "debug/DebugClusters.geom"
            Fragment : "debug/DebugClusters.frag"
        Extensions : [
            "GL_EXT_control_flow_attributes"
        ]
    DebugLights : 
        Shaders : 
            Vertex : "debug/DebugLights.vert"
            Fragment : "debug/DebugLights.frag"
        Extensions : [
            "GL_EXT_control_flow_attributes"
        ]

